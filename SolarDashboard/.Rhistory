library(arules)
library(arules)
library(arulesViz)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
---
title: "Sączewski Maciej Analiza Danych w Biznesie"
output:
html_document:
df_print: paged
---
```{r echo=FALSE}
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
```
Pobranie i przedstawienie danych
```{r}
groceries <- data(Groceries)
itemFrequencyPlot(Groceries,topN=20,type="absolute", ylab="Ilośc wystąpień")
```
groceries <- data(Groceries)
rules <- apriori(Groceries, parameter = list(supp = 0.001, conf = 0.8,maxlen = 3))
rules<-sort(rules, by="confidence", decreasing=TRUE)
subset.matrix <- is.subset(rules, rules)
subset.matrix[lower.tri(subset.matrix, diag=T)] <- NA
redundant <- colSums(subset.matrix, na.rm=T) >= 1
rules.pruned <- rules[!redundant]
rules<-rules.pruned
rules<-sort(rules, decreasing=TRUE,by="confidence")
inspect(rules[1:5])
View(rules)
widget_list <- lapply(1:10, FUN = function(i)
plot(sample(rules, size = 10), method = "graph", engine = "htmlwidget"))
library(rgl)
library(rgl)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
library(rgl)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
knit_hooks$set(webgl = hook_webgl)
library(rgl)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
knit_hooks$set(webgl = hook_webgl)
---
title: "Sączewski Maciej Analiza Danych w Biznesie"
output:
html_document:
df_print: paged
---
```{r echo=FALSE, results='hide', include=FALSE}
library(rgl)
library(arules)
library(arulesViz)
library(knitr)
library(datasets)
options(digits=2)
knit_hooks$set(webgl = hook_webgl)
```
Pobranie i przedstawienie danych
```{r}
groceries <- data(Groceries)
itemFrequencyPlot(Groceries,topN=20,type="absolute", ylab="Ilośc wystąpień")
```
groceries <- data(Groceries)
rules <- apriori(Groceries, parameter = list(supp = 0.001, conf = 0.8,maxlen = 3))
inspect(rules[1:10])
rules<-sort(rules, by="confidence", decreasing=TRUE)
widget_list <- lapply(1:10, FUN = function(i)
plot(sample(rules, size = 10), method = "graph", engine = "htmlwidget"))
htmltools::tagList(widget_list)
vizu_result < -plot(sample(rules, size = 10), method = "graph", engine = "htmlwidget")
vizu_result <- plot(sample(rules, size = 10), method = "graph", engine = "htmlwidget")
? is.redundant()
library(arules)
library(arules)
? is.redundant()
groceries <- data(Groceries)
rules <- apriori(Groceries, parameter = list(supp = 0.001, conf = 0.8,maxlen = 3))
rules<-sort(rules, by="confidence", decreasing=TRUE)
redundant <- is.redundant(rules, measure="confidence")
knitr::opts_chunk$set(echo = TRUE)
data <- read.delim("plants.txt")
View(data)
View(data)
data <- read.delim("plants.txt", header=TRUE, sep=" ")
View(data)
View(data)
kable(data)
library(knitr)
data <- read.delim("plants.txt", header=TRUE, sep=" ")
kable(data)
library(kableExtra)
data <- read.delim("plants.txt", header=TRUE, sep=" ")
kable(data)
kable(data) %>% kable_styling()
kable(head(data)) %>% kable_styling()
library(survival)
library(survival)
library(ggfortify)
install.packages(ggfortify)
install.packages("ggfortify")
library(ggfortify)
kable(head(data)) %>% kable_styling()
fit <- survfit(Surv(data$dday, data$dind) ~ data$ploidy, data = data$temp)
typeof(data)
df <- data.frame(data)
fit <- survfit(Surv(df$dday, df$dind) ~ df$ploidy, data = df)
autoplot(fit)
fit <- survfit(Surv(df$dday, df$pop) ~ df$ploidy, data = df)
fit <- survfit(Surv(df$dday, df$dind) ~ df$pop, data = df)
autoplot(fit)
fit <- survfit(Surv(df$dday, df$dind) ~ df$pop + df$ploidy + df$size + df$temp, data = df)
autoplot(fit)
fit <- survfit(Surv(df$dday, df$dind) ~ df$pop + df$ploidy + df$size, data = df)
autoplot(fit)
fit <- survfit(Surv(df$dday, df$dind) ~ df$pop, data = df)
autoplot(fit)
fit <- survfit(Surv(df$dday, df$dind) ~ df$size, data = df)
autoplot(fit)
View(fit)
autoplot(fit, conf.int = FALSE)
autoplot(fit, conf.int = FALSE, censor.shape = '*')
fit <- survfit(Surv(df$dday, df$dind) ~ df$pop, data = df)
autoplot(fit, conf.int = FALSE, censor.shape = '*')
autoplot(fit, conf.int = FALSE, censor.shape = '*', legendLabs="Identyfikator populacji")
autoplot(fit, conf.int = FALSE, censor.shape = '*', legendLabs=c("surgical", "percutaneous"))
autoplot(fit, conf.int = FALSE, censor.shape = '*', plotTable=TRUE, divideTime=5,
legendLabs=c("surgical", "percutaneous"),
title="Time to infection following catheter placement \n
by type of catheter, for dialysis patients"))
autoplot(fit, conf.int = FALSE, censor.shape = '*', plotTable=TRUE, divideTime=5,
legendLabs=c("surgical", "percutaneous"),
title="Time to infection following catheter placement \n
by type of catheter, for dialysis patients")
autoplot(fit, conf.int = FALSE, censor.shape = '*', plotTable=TRUE)
survdiff(Surv(df$dday, df$dind) ~ df$pop, data = df)
surv <- survdiff(Surv(df$dday, df$dind) ~ df$pop, data = df)
kable(surv) %>% kable_styling()
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
tbl <- read.csv("Dane.csv", sep = ";")
tbl <- read.csv("Dane.csv", sep = ";")
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp()
runApp()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
dane <- mydata()
dane <- mydata()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
exit()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
install.packages("hrbrthemes")
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
dane <- myData()
dane <- myData()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
install.packages("keras")
install.packages("keras")
install.packages("keras")
library(keras)
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
Y
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
install.packages("ggridges")
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
install.packages("GGRidge")
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
install.packages("GGRidge")
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp()
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB')
date_start = strptime("01.01.1901", "%d.%m.%Y")
date_end = strptime("31.12.2000", "%d.%m.%Y")
print(as.numeric(difftime(date_start, date_end)))
install.packages("TTR")
ts (1:10, frequency = 12, start = 1990)
ts (1:10, frequency = 1, start = 1990)
ts (1:10, frequency = 4, start = 1990)
ts (1 frequency = 4, start = 1990)
ts(c("1994", "1995", "1996", "1997", "1998", "1999", "2000"), frequency = 4, start = 1994)
ts(c("1994", "1995", "1996", "1997", "1998", "1999", "2000"), frequency = 12, start = 1994)
ts(c(459.27, 615.93, 740.74, 970.43, 1229.43, 1469.25, 1320.28), frequency = 12, start = 1994)
ts(c(459.27, 615.93, 740.74, 970.43, 1229.43, 1469.25, 1320.28), start = 1994)
install.packages("TSA")
data(hours)
data(hours)
data <- data.frame(hours)
sc <- scale_x_date(
limits = range(df.r$year.month.r),
date_labels = '%b %y',
date_minor_breaks = '1 month')
year.month.r <- seq.Date(as.Date("2016-10-01"), as.Date("2018-02-01"), by = "month")
df.r <- data.frame(year.month.r, total.a)
year.month.r <- seq.Date(as.Date("2016-10-01"), as.Date("2018-02-01"), by = "month")
df.r <- data.frame(year.month.r, total.a)
year.month.r <- seq.Date(as.Date("2016-10-01"), as.Date("2018-02-01"), by = "month")
df.r <- data.frame(year.month.r, total.a)
sc <- scale_x_date(
limits = range(df.r$year.month.r),
date_labels = '%b %y',
date_minor_breaks = '1 month')
res %>% ggplot(aes(x=date, y=as.matrix.hours., group = 1)) +
geom_line( color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme_ipsum() +
scale_x_date(date_labels="%m %Y",date_breaks  ="1 month")
res %>% ggplot(aes(x=date, y=as.matrix.hours., group = 1)) +
geom_line( color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme_ipsum()_
data(hours)
res <- data.frame(as.matrix(hours), date=time(hours))
data(hours)
plot(hours)
plot(hours)
dane <- data(hours)
plot(dane)
ds <- c("USArrests", "VADeaths"); data(list = ds)
ds
ds
ds <- c("USArrests", "VADeaths"); data("VADeaths")
ds
ds <- c("USArrests", "VADeaths"); data("VADeaths")
ds
ds <-data("VADeaths")
ds
df <- data.frame(
Hours = as.data.frame(hours),
Date = time(hours)
)
data(hours)
df <- data.frame(
Hours = as.data.frame(hours),
Date = time(hours)
)
df <- data.frame(
Hours = as.data.frame(data(hours)),
Date = time(data(hours))
)
View(df)
View(df)
df <- data.frame(
Hours = as.data.frame(data(hours)),
Date = time(data(hours))
)
View(df)
t <- time(hours)
wydatki <- c(1,2,3,4,5,6,7,8,9,8,7,6,5,4,3,2)
ts_wydatki <- ts(wydatki, start=c(2000), end=c(2016), frequency = 1)
ts_wydatki
plot(wydatki)
plot(ts_wydatki)
ts_wydatki <- ts(wydatki, start=c(2000), end=c(2017), frequency = 1)
plot(ts_wydatki)
ts_wydatki <- ts(wydatki, start=c(2000), end=c(2020), frequency = 1)
plot(ts_wydatki)
ts_wydatki <- ts(wydatki, start=c(2000), end=c(2100), frequency = 1)
plot(ts_wydatki)
ts_wydatki <- ts(wydatki, start=c(2000), end=c(2016), frequency = 1)
plot(ts_wydatki)
plot(ts_sprzedarz)
sprzedarz <- c(2,3,4,5,6,7,8,9,8,7,6,5,4,3,2,1)
ts_sprzedarz <- ts(wydatki, start=c(2000), end=c(2016), frequency = 1)
plot(ts_wydatki)
plot(ts_sprzedarz)
install.packages("RColorBrewer")
shiny::runApp('Documents/Studia/SystemyInteligentne/SaczewskiMaciej_SIwB/SolarDashboard')
